<?php
/**
 * Created by PhpStorm.
 * User: Devinhollister-graham
 * Date: 11/11/18
 * Time: 11:57 AM
 */

namespace App\Controller\Component;

use App\Model\Table\CompletedMaintenancesTable;
use App\Model\Table\InventoriesTable;
use App\Model\Table\InventoryTransactionsTable;
use App\Model\Table\MaintenancesTable;
use Cake\Controller\Component;
use Cake\I18n\Date;
use Cake\I18n\Time;
use Cake\ORM\Locator\TableLocator;
use Cake\ORM\TableRegistry;

/**
 * @property InventoriesTable Inventories
 * @property InventoryTransactionsTable InventoryTransactions
 * @property Component\AuthComponent Auth
 * @property CompletedMaintenancesTable CompletedMaintenances
 * @property MaintenancesTable Maintenances
 */
class InventoryComponent extends Component
{
    public $components = ['Auth'];

    /**
     * @param array $config
     */
    public function initialize(array $config): void
    {

        $this->Inventories = TableRegistry::getTableLocator()->get('Inventories');
        $this->InventoryTransactions = TableRegistry::getTableLocator()->get('InventoryTransactions');
        $this->CompletedMaintenances = TableRegistry::getTableLocator()->get('CompletedMaintenances');
        $this->Maintenances = TableRegistry::getTableLocator()->get('Maintenances');

        parent::initialize($config); // TODO: Change the autogenerated stub
    }

    public function checkInventory($maintenance)
    {
        if (isset($maintenance['items'])) {
            foreach ($maintenance['items'] as &$item) {
                $item = $this->checkItemInventory($item);
            }
        }

        return $maintenance;
    }

    public function checkItemInventory($item_array)
    {
        if ($item_array['id']) {
            $item = $this->Maintenances->Items->get(
                $item_array['id'],
                [
                'contain' => ['ActiveStoreInventories'],
                ]
            );

            if ($item->active_store_inventory === null) {
                $inventory = $this->Maintenances->Items->Inventories->newEntity(
                    [
                    'current_stock' => 1,
                    'initial_stock' => 1,
                    'supplier_id' => 1,
                    'last_inventory_date' => new Date(),
                    'item_id' => $item_array['id'],
                    'store_id' => $this->_registry->getController()->Auth->user('active_store'),
                    ]
                );
                $this->Maintenances->Items->Inventories->save($inventory);
            }
        } else {
            if (!isset($item_array['active_store_inventories'])) {
                $item_array['active_store_inventories'] = [
                    'current_stock' => 1,
                    'initial_stock' => 1,
                    'supplier_id' => 1,
                    'last_inventory_date' => new Date(),
                    'store_id' => $this->_registry->getController()->Auth->user('active_store'),
                ];
            }
        }

        return $item_array;
    }
}
